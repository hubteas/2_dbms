/*조합키 (복합키)
   두 개 이상의 컬럼을 PK로 지정하는 것.
   테이블에 한 개의 PK만 존재할 수 있지만
   조합키를 사용하면 두 개 이상의 컬럼을 하나의 PK로 사용할 수 있다.
   
  무결성 : 데이터에 결함이 없다.
  	-데이터의 정확성, 일관성, 유효성이 유지되는것.
  	1. 정확성 : 데티어는 애매하지 않아야 한다.
  	2. 일관성 : 각 사용자가 일관된 데이터를 볼 수 있도록 해야한다.
  	3. 유효성 : 데이터가 실제 존재하는 데이터여야 한다.
  	
  	무결성의 3가지 종류
  	1. 개체 무결성
  		- 모든 테이블이 PK로 선택된 컬럼을 가져야 한다.
  	2. 참조 무결성
  		- 두 테이블의 데이터가 항상 일관된 값을 가지도록 유지하는 것
  	3. 도메인 무결성
  		- 컬럼의 타입, NULL값으 허용 등에 대한 상항을 정의하고 올바른 데이터가 입력되었는지를 확인하는 것.
*/
DROP TABLE TBL_FLOWER;
CREATE TABLE TBL_FLOWER(
	FLOWER_NAME VARCHAR2(1000),
	FLOWER_COLOR VARCHAR2(1000),
	FLOWER_PRICE NUMBER,
	CONSTRAINT PK_FLOWER PRIMARY KEY(FLOWER_NAME, FLOWER_COLOR)
);

INSERT INTO TBL_FLOWER VALUES('장미', '검정', 5000);

INSERT INTO TBL_FLOWER VALUES('장미', '빨강', 4500);

INSERT INTO TBL_FLOWER VALUES('튤립','빨강',1500);

SELECT * FROM TBL_FLOWER;


--=======================================================================
-- 류호근 강사와 함께하는 모델링 예제!
-- 5. 구현
CREATE TABLE TBL_PHONE(
   PHONE_SERIAL_NUMBER VARCHAR2(500),
   PHONE_COLOR VARCHAR2(500),
   PHONE_SIZE NUMBER,
   PHONE_PRICE NUMBER,
   PHONE_PRODUCTION_DATE DATE,
   PHONE_SALE NUMBER,
   CONSTRAINT PK_PHONE PRIMARY KEY(PHONE_SERIAL_NUMBER)
);

CREATE TABLE TBL_CASE(
   CASE_SERIAL_NUMBER VARCHAR2(500),
   CASE_COLOR VARCHAR2(500),
   CASE_PRICE NUMBER,
   PHONE_SERIAL_NUMBER VARCHAR2(500),
   CONSTRAINT PK_CASE PRIMARY KEY(CASE_SERIAL_NUMBER),
   CONSTRAINT FK_CASE FOREIGN KEY(PHONE_SERIAL_NUMBER)
   REFERENCES TBL_PHONE(PHONE_SERIAL_NUMBER)
);

/*
 요구사항 분석
 	- 도서관에서 회원의 정보와 책의 정보가 필요하다.
 	- 회원의 정보는 회원번호, 이름, 나이, 핸드폰 번호, 주소가 필요하다.
 	- 단, 장르는 인문학, 추리, IT, 로맨스 <--이렇게만 구성된다.
 	- 한명의 회원은 여러 권의 책을 빌릴 수 있다.
 	- 테이블명 : MEMBER, BOOK
 회원 = 회원번호, 이름, 나이 핸드폰번호, 주소
 책 = 장르, 수량, 도서번호
 */
DROP TABLE TBL_MEMBER;
SELECT * FROM TBL_MEMBER;
CREATE TABLE TBL_MEMBER(
	MEMBER_ID NUMBER,
	MEMBER_NAME VARCHAR2(500) NOT NULL,
	MEMBER_AGE NUMBER NOT NULL,
	MEMBER_PHONE_NUMBER VARCHAR2(500) NOT NULL,
	MEMBER_ADDRESS VARCHAR2(500) NOT NULL,
	CONSTRAINT PK_MEMBER PRIMARY KEY(MEMBER_ID),
	CONSTRAINT UK_MEMBER UNIQUE (MEMBER_PHONE_NUMBER)
);

DROP TABLE TBL_BOOK;
SELECT * FROM TBL_BOOK;
CREATE TABLE TBL_BOOK(
	BOOK_ID NUMBER,
	BOOK_NAME VARCHAR2(1000) NOT NULL,
	BOOK_GENRE VARCHAR2(1000),
	MEMBER_ID NUMBER,
 	CONSTRAINT PK_BOOK PRIMARY KEY(BOOK_ID),
 	CONSTRAINT FK_BOOK FOREIGN KEY(MEMBER_ID)
 	REFERENCES TBL_MEMBER(MEMBER_ID),
 	CHECK(BOOK_GENRE IN ('인문학', '추리','IT','로맨스'))
);


-- 류호근 강사가 풀어본 모델링 실습 결과물
DROP TABLE TBL_MEMBER;
DROP TABLE TBL_BOOK;

CREATE TABLE TBL_MEMBER(
   MEMBER_ID NUMBER,
   MEMBER_NAME VARCHAR2(500) NOT NULL,
   MEMBER_AGE NUMBER NOT NULL,
   MEMBER_PHONE VARCHAR2(500) NOT NULL,
   MEMBER_ADDRESS VARCHAR2(500) NOT NULL,
   CONSTRAINT PK_MEMBER PRIMARY KEY(MEMBER_ID),
   CONSTRAINT UK_MEMBER UNIQUE(MEMBER_PHONE)
);

CREATE TABLE TBL_BOOK(
   BOOK_ID NUMBER,
   BOOK_NAME VARCHAR2(500) NOT NULL,
   BOOK_GENRE VARCHAR2(500),
   MEMBER_ID NUMBER,
   CONSTRAINT PK_BOOK PRIMARY KEY(BOOK_ID),
   CONSTRAINT FK_BOOK FOREIGN KEY(MEMBER_ID)
   REFERENCES TBL_MEMBER(MEMBER_ID),
   CHECK(BOOK_GENRE IN ('인문학', '추리', 'IT', '로맨스'))
);


--관계를 맺은 테이블 들의 DML
SELECT * FROM TBL_PHONE;
SELECT * FROM TBL_CASE;

INSERT INTO TBL_PHONE
(PHONE_SERIAL_NUMBER, PHONE_COLOR, PHONE_SIZE, PHONE_PRICE, PHONE_PRODUCTION_DATE, PHONE_SALE)
VALUES('S23-001', 'GREEN', 7, 200, '2023-02-11', 0);
--DATE 타입의 컬럼에 문자타입의 값을 'YYYY-MM-DD'의 형태로 넣으면 자동으로 DATE타입으로 변환되어 들어간다.

INSERT INTO TBL_PHONE
(PHONE_SERIAL_NUMBER, PHONE_COLOR, PHONE_SIZE, PHONE_PRICE, PHONE_PRODUCTION_DATE, PHONE_SALE)
VALUES('S23-002', 'WHITE', 7, 200, SYSDATE, 0);


INSERT INTO TBL_PHONE
(PHONE_SERIAL_NUMBER, PHONE_COLOR, PHONE_SIZE, PHONE_PRICE, PHONE_PRODUCTION_DATE, PHONE_SALE)
VALUES('S23-003', 'BLACK', 7, 200, '2023/02/15', 0);

INSERT INTO TBL_CASE
VALUES('ABC', 'WHITE', 10000, 'S23-001');

INSERT INTO TBL_CASE
VALUES('DEF', 'BLACK', 12000, 'S23-002');


