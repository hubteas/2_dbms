SELECT * FROM EMPLOYEES;

CREATE TABLE TBL_USER(
	USER_NAME VARCHAR2(1000),
	USER_AGE NUMBER
);
--테이블 이름 변경
ALTER TABLE TBL_USER RENAME TO TBL_MY_USER;
-- 테이블 컬럼추가
ALTER TABLE TBL_MY_USER ADD (USER_GENDER CHAR(4));
--테이블 컬럼 이름 변경
ALTER TABLE TBL_MY_USER RENAME COLUMN USER_NAME TO USER_NICKNAME;
--컬럼 삭제
ALTER TABLE TBL_MY_USER DROP COLUMN USER_GENDER;
--컬럼 자료형 수정
ALTER TABLE TBL_MY_USER MODIFY(USER_NICKNAME VARCHAR2(500));
-- TRUNCATE
--TRUNCATE 실습을 위해 INSERT 두개만 때리자
INSERT INTO TBL_MY_USER 
VALUES('포근', 22);

SELECT * FROM TBL_MY_USER;
--테이블 내용 전체삭제
TRUNCATE TABLE TBL_MY_USER; 
--테이블 삭제
DROP TABLE TBL_MY_USER;

--=========================================================================
-- 제약조건
-- 임의테이블 생성
CREATE TABLE TBL_CAR(
	CAR_ID NUMBER,
	CAR_NAME VARCHAR2(1000),
	CAR_BRAND VARCHAR2(1000),
	CAR_RELEASE_DATE DATE,
	CAR_COLOR VARCHAR2(1000),
	CAR_PRICE NUMBER
);

--ALTER 문을 이용한 제약조건 추가
ALTER TABLE TBL_CAR ADD CONSTRAINT PK_CAR PRIMARY KEY(CAR_ID);
/*
ALTER TABLE TBL_CAR : TB;_CAR 테블을 수정하겠다.
ADD CONSTRAINT :제약조건을 추가하겠다.
PK_CAR : 제약 조건 이름(제약 조건을 삭제할 때 사용)
PRIMARY KEY(CAR_ID) : PK라는 제약조건을 CAR
*/

--ALTER 문을 이요한 제약조건 삭제!
ALTER TABLE TBL_CAR DROP CONSTRAINT PK_CAR;


DROP TABLE TBL_CAR;

CREATE TABLE TBL_CAR(
	CAR_ID NUMBER PRIMARY KEY,
	CAR_NAME VARCHAR2(1000),
	CAR_BRAND VARCHAR2(1000),
	CAR_RELEASE_DATE DATE,
	CAR_COLOR VARCHAR2(1000),
	CAR_PRICE NUMBER
);

ALTER TABLE TBL_CAR DROP CONSTRAINT SYS_C007020;

--제약조건 이름을 부여함과 동시에 제약조건 추가
CREATE TABLE TBL_CAR(
	CAR_ID NUMBER  CONSTRAINT PK_CAR PRIMARY KEY,
	CAR_NAME VARCHAR2(1000),
	CAR_BRAND VARCHAR2(1000),
	CAR_RELEASE_DATE DATE,
	CAR_COLOR VARCHAR2(1000),
	CAR_PRICE NUMBER
);

DROP TABLE TBL_CAR;

CREATE TABLE TBL_CAR(
	CAR_ID NUMBER,
	CAR_NAME VARCHAR2(1000),
	CAR_BRAND VARCHAR2(1000),
	CAR_RELEASE_DATE DATE,
	CAR_COLOR VARCHAR2(1000),
	CAR_PRICE NUMBER,
	CONSTRAINT PK_CAR PRIMARY KEY(CAR_ID)
);

-- [실습]
-- 동물 테이블
DROP TABLE TBL_ANIMAL;

CREATE TABLE TBL_ANIMAL(
	ANIMAL_ID NUMBER,
	ANIMAL_TYPE VARCHAR2(1000),
	ANIMAL_AGE NUMBER,
	ANIMAL_FOOD VARCHAR(1000)
);
-- 고유 번호, 종류, 나이, 먹이

-- 제약 조건 추가(PK)
ALTER TABLE TBL_ANIMAL ADD CONSTRAINT PK_ANIMAL PRIMARY KEY(ANIMAL_ID);
-- 제약 조건 삭제(PK)
ALTER TABLE TBL_ANIMAL DROP CONSTRAINT PK_ANIMAL;
-- 컬럼 추가(성별)
ALTER TABLE TBL_ANIMAL ADD(ANIMAL_GENDER VARCHAR2(1000));
-- 컬럼 이름 수정(고유 번호)
ALTER TABLE TBL_ANIMAL RENAME COLUMN ANIMAL_ID TO ANIMAL_UK;
-- 컬럼 삭제 (먹이)
ALTER TABLE TBL_ANIMAL DROP COLUMN ANIMAL_FOOD;
-- 컬럼의 자료형 수정
ALTER TABLE TBL_ANIMAL MODIFY(ANIMAL_TYPE VARCHAR2(500));
-- 동물 테이블 삭제
DROP TABLE TBL_ANIMAL;
SELECT * FROM TBL_ANIMAL;

--===================================================================================
-- PK의 특징과 FK부여 방법 및 특징
CREATE TABLE TBL_PRODUCT(
	PRODUCT_NUMBER NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
	PRODUCT_NAME VARCHAR2(1000),
	PRODUCT_PRICE NUMBER
);

INSERT INTO TBL_PRODUCT VALUES(1, '로지텍K855', 89000);

INSERT INTO TBL_PRODUCT VALUES(2, '로지텍G302', 55000);

INSERT INTO TBL_PRODUCT VALUES(3, '팜레스트', 22000);

INSERT INTO TBL_PRODUCT VALUES(NULL, '두루마리 휴지', 25000);--PK 는 NULL을 넣을수 없다.

SELECT * FROM TBL_PRODUCT;

--====================================================================================
--FK
CREATE TABLE TBL_SCHOOL(
	SCHOOL_NUMBER NUMBER,
	SCHOOL_NAME VARCHAR2(500),
	CONSTRAINT PK_SCHOOL PRIMARY KEY(SCHOOL_NUMBER)

);
--이미 존재했던 STUDENT 테이블삭제
DROP TABLE TBL_STUDENT;

CREATE TABLE TBL_STUDENT(
	STUDENT_NUMBER NUMBER,
	STUDENT_NAME VARCHAR(1000),
	STUDENT_AGE NUMBER,
	SCHOOL_NUMBER NUMBER,
	CONSTRAINT PK_STUDENT PRIMARY KEY(STUDENT_NUMBER),
	CONSTRAINT FK_STUDENT FOREIGN KEY(SCHOOL_NUMBER)
	REFERENCES TBL_SCHOOL(SCHOOL_NUMBER)
	
);

-- 직접 데이터를 삽입하면서 어떤식으로 동작하는지 알아보도록 하자!
INSERT INTO TBL_SCHOOL VALUES(1, '로지텍 고등학교');
INSERT INTO TBL_SCHOOL VALUES(2, '레이저 고등학교');
INSERT INTO TBL_SCHOOL VALUES(3, 'ABKO 고등학교');
SELECT * FROM TBL_SCHOOL;

SELECT * FROM TBL_STUDENT;
INSERT INTO TBL_STUDENT VALUES(1, '류호근', 22, 1);
INSERT INTO TBL_STUDENT VALUES(2, '홍길동', 22, 1);
INSERT INTO TBL_STUDENT VALUES(3, '장보고', 22, 2);
INSERT INTO TBL_STUDENT VALUES(4, '강감찬', 22, 4);--FK인 SCHOOL_NUMBER가 존재하지 않는 값을 저장.

SELECT * FROM TBL_STUDENT;

--======================================================================================
--기타 제약 조건들
DROP TABLE TBL_STUDENT;

CREATE TABLE TBL_STUDENT(
	STUDENT_NUMBER NUMBER PRIMARY KEY,
	STUDENT_ID VARCHAR2(500) CONSTRAINT UK_STUDENT UNIQUE,
--KEY를 붙이지 않음
STUDENT_NAME VARCHAR(500),
	STUDENT_MAJOR VARCHAR2(500),
	STUDENT_GENDER CHAR(1) DEFAULT 'W' NOT NULL
	CONSTRAINT CHECK_GENDER CHECK(STUDENT_GENDER IN ('M', 'W'))
);

INSERT INTO TBL_STUDENT
(STUDENT_NUMBER, STUDENT_ID, STUDENT_NAME, STUDENT_MAJOR, STUDENT_GENDER)
VALUES(1, 'HOGEUN', '류호근', '사회복지', 'M');

INSERT INTO TBL_STUDENT
(STUDENT_NUMBER, STUDENT_ID, STUDENT_NAME, STUDENT_MAJOR, STUDENT_GENDER)
VALUES(2, 'HOGEUN', '홍길동', '컴공', 'M'); -- UK, 중복 허용 안됨!

INSERT INTO TBL_STUDENT
(STUDENT_NUMBER, STUDENT_ID, STUDENT_NAME, STUDENT_MAJOR, STUDENT_GENDER)
VALUES(2, 'GILDONG', '홍길동', '컴공', 'M'); -- 아이디 바꾸니 잘 들어감!

INSERT INTO TBL_STUDENT
(STUDENT_NUMBER, STUDENT_ID, STUDENT_NAME, STUDENT_MAJOR)
VALUES(3, 'CHUNHYANG', '성춘향', '데이터사이언스'); -- 

INSERT INTO TBL_STUDENT
(STUDENT_NUMBER, STUDENT_ID, STUDENT_NAME, STUDENT_MAJOR, STUDENT_GENDER)
VALUES(4, 'GATSBY', '개츠비', '재벌', 'K'); -- CHECK 에서 걸린다!

SELECT * FROM TBL_STUDENT;




























